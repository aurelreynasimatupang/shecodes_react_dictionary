{"ast":null,"code":"process;\nvar t = {\n  photo: \"https://api.pexels.com/v1/\",\n  video: \"https://api.pexels.com/videos/\",\n  collections: \"https://api.pexels.com/v1/collections/\"\n};\n\nfunction r(r, e) {\n  var n = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": \"Pexels/JavaScript\",\n      Authorization: r\n    }\n  },\n      o = t[e];\n  return function (t, r) {\n    return fetch(\"\" + o + t + \"?\" + function (t) {\n      return Object.keys(t).map(function (r) {\n        return r + \"=\" + t[r];\n      }).join(\"&\");\n    }(r || {}), n).then(function (t) {\n      if (!t.ok) throw new Error(t.statusText);\n      return t.json();\n    });\n  };\n}\n\nfunction e(t) {\n  var e = r(t, \"collections\");\n  return {\n    all: function (t) {\n      return void 0 === t && (t = {}), e(\"\", t);\n    },\n    media: function (t) {\n      var r = t.id,\n          n = function (t, r) {\n        if (null == t) return {};\n        var e,\n            n,\n            o = {},\n            i = Object.keys(t);\n\n        for (n = 0; n < i.length; n++) r.indexOf(e = i[n]) >= 0 || (o[e] = t[e]);\n\n        return o;\n      }(t, [\"id\"]);\n\n      return e(\"\" + r, n);\n    },\n    featured: function (t) {\n      return void 0 === t && (t = {}), e(\"featured\", t);\n    }\n  };\n}\n\nfunction n(t) {\n  return !(!t || !t.photos);\n}\n\nvar o = {\n  __proto__: null,\n  isPhotos: n,\n  isVideos: function (t) {\n    return !(!t || !t.videos);\n  },\n  isError: function (t) {\n    return !!t.error;\n  }\n};\n\nfunction i(t) {\n  var e = r(t, \"photo\");\n  return {\n    search: function (t) {\n      return e(\"/search\", t);\n    },\n    curated: function (t) {\n      return void 0 === t && (t = {}), e(\"/curated\", t);\n    },\n    show: function (t) {\n      return e(\"/photos/\" + t.id);\n    },\n    random: function () {\n      try {\n        var t = Math.floor(1e3 * Math.random());\n        return Promise.resolve(this.curated({\n          page: t,\n          per_page: 1\n        })).then(function (t) {\n          return n(t) ? t.photos[0] : t;\n        });\n      } catch (t) {\n        return Promise.reject(t);\n      }\n    }\n  };\n}\n\nfunction u(t) {\n  var e = r(t, \"video\");\n  return {\n    search: function (t) {\n      return e(\"/search\", t);\n    },\n    popular: function (t) {\n      return void 0 === t && (t = {}), e(\"/popular\", t);\n    },\n    show: function (t) {\n      return e(\"/videos/\" + t.id);\n    }\n  };\n}\n\nfunction c(t) {\n  if (!t || \"string\" != typeof t) throw new TypeError(\"An ApiKey must be provided when initiating the Pexel's client.\");\n  return {\n    typeCheckers: o,\n    photos: i(t),\n    videos: u(t),\n    collections: e(t)\n  };\n}\n\nrequire(\"isomorphic-fetch\");\n\nexport { c as createClient };","map":{"version":3,"sources":["/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/constants.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/createFetchWrapper.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/generateCollectionEndpoints.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/typeCheckers.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/generatePhotoEndpoints.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/generateVideoEndpoints.ts","/Users/aurelia/Documents/GitHub/shecodes_react_disctionary/node_modules/pexels/src/createClient.ts"],"names":["process","baseUrls","photo","video","collections","createFetchWrapper","apiKey","type","options","method","headers","Accept","Content-Type","User-Agent","Authorization","baseUrl","path","params","fetch","stringifyParams","then","response","ok","Error","statusText","json","Object","keys","map","key","join","generateCollectionEndpoints","fetchWrapper","all","media","id","featured","isPhotos","x","photos","videos","error","generatePhotoEndpoints","search","curated","show","random","randomPage","Math","floor","this","page","per_page","popular","require","createClient","TypeError","typeCheckers","generateVideoEndpoints"],"mappings":"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","sourcesContent":["export const photoBaseUrl = \"https://api.pexels.com/v1/\";\nexport const videoBaseUrl = \"https://api.pexels.com/videos/\";\nexport const collectionBaseUrl = \"https://api.pexels.com/v1/collections/\";\nexport const testApiKey = process.env.API_KEY as string;\n","import { Params } from \"./types\";\nimport { photoBaseUrl, videoBaseUrl, collectionBaseUrl } from \"./constants\";\n\ntype AllowedTypes = \"photo\" | \"video\" | \"collections\";\n\nconst baseUrls: { [T in AllowedTypes]: string } = {\n  photo: photoBaseUrl,\n  video: videoBaseUrl,\n  collections: collectionBaseUrl,\n};\n\nexport default function createFetchWrapper(apiKey: string, type: AllowedTypes) {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": \"Pexels/JavaScript\",\n      Authorization: apiKey,\n    },\n  };\n\n  const baseUrl = baseUrls[type];\n\n  return <T extends Params>(path: string, params?: T) =>\n    fetch(`${baseUrl}${path}?${stringifyParams(params || {})}`, options).then(\n      (response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return response.json();\n      }\n    );\n}\n\nfunction stringifyParams<T extends Params>(params: T) {\n  return Object.keys(params)\n    .map((key) => `${key}=${params[key]}`)\n    .join(\"&\");\n}\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport { Collection, PaginationParams, ErrorResponse, Medium } from \"./types\";\n\ntype AllReturn =\n  | {\n      page: number;\n      per_page: number;\n      collections: Collection[];\n    }\n  | ErrorResponse;\n\ntype MediaReturn =\n  | {\n      page: number;\n      per_page: number;\n      total_results: number;\n      media: (Medium & { type: \"Video\" | \"Photo\" })[];\n    }\n  | ErrorResponse;\n\ntype FeaturedReturn =\n  | { page: number; per_page: number; collections: Collection[] }\n  | ErrorResponse;\n\nexport default function generateCollectionEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"collections\");\n\n  return {\n    all(params: PaginationParams = {}): Promise<AllReturn> {\n      return fetchWrapper(\"\", params);\n    },\n    media({\n      id,\n      ...params\n    }: PaginationParams & {\n      id: string | number;\n      type?: \"photos\" | \"videos\";\n    }): Promise<MediaReturn> {\n      return fetchWrapper(`${id}`, params);\n    },\n    featured(params: PaginationParams = {}): Promise<FeaturedReturn> {\n      return fetchWrapper(\"featured\", params);\n    },\n  };\n}\n","import { Photos, Videos, ErrorResponse } from \"./types\";\n\n/**\n * A helper function to determine if the object is a valid Photo response\n */\nexport function isPhotos(x: any): x is Photos {\n  return !!(x && x.photos);\n}\n\n/**\n * A helper function to determine if the object is a valid Video response\n */\nexport function isVideos(x: any): x is Videos {\n  return !!(x && x.videos);\n}\n\n/**\n * A helper function to determine if the object was an error response\n */\nexport function isError(x: any): x is ErrorResponse {\n  return !!x.error;\n}\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport {\n  Photo,\n  PaginationParams,\n  ErrorResponse,\n  Photos,\n  PhotosWithTotalResults,\n} from \"./types\";\nimport { isPhotos } from \"./typeCheckers\";\n\ntype SearchReturn = PhotosWithTotalResults | ErrorResponse;\ntype CuratedReturn = Photos | ErrorResponse;\ntype ShowReturn = Photo | ErrorResponse;\ntype RandomReturn = Photo | ErrorResponse;\n\nexport default function generatePhotoEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"photo\");\n\n  return {\n    search(\n      params: PaginationParams & { query: string }\n    ): Promise<SearchReturn> {\n      return fetchWrapper(`/search`, params);\n    },\n    curated(params: PaginationParams = {}): Promise<CuratedReturn> {\n      return fetchWrapper(`/curated`, params);\n    },\n    show({ id }: { id: string | number }): Promise<ShowReturn> {\n      return fetchWrapper(`/photos/${id}`);\n    },\n    async random(): Promise<RandomReturn> {\n      const randomPage = Math.floor(1000 * Math.random());\n      const response = await this.curated({ page: randomPage, per_page: 1 });\n\n      if (isPhotos(response)) {\n        return response.photos[0] as RandomReturn;\n      }\n\n      return response as ErrorResponse;\n    },\n  };\n}\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport {\n  PaginationParams,\n  ErrorResponse,\n  Video,\n  Videos,\n  VideoFilterParams,\n} from \"./types\";\n\ntype SearchReturn = Videos | ErrorResponse;\ntype PopularReturn = Videos | ErrorResponse;\ntype ShowReturn = Video;\n\nexport default function generatePhotoEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"video\");\n\n  return {\n    search(\n      params: PaginationParams &\n        VideoFilterParams & {\n          query: string;\n        }\n    ): Promise<SearchReturn> {\n      return fetchWrapper(`/search`, params);\n    },\n    popular(\n      params: PaginationParams & VideoFilterParams = {}\n    ): Promise<PopularReturn> {\n      return fetchWrapper(`/popular`, params);\n    },\n    show({ id }: { id: string | number }): Promise<ShowReturn> {\n      return fetchWrapper(`/videos/${id}`);\n    },\n  };\n}\n","require(\"isomorphic-fetch\");\n\nimport generateCollectionEndpoints from \"./generateCollectionEndpoints\";\nimport generatePhotoEndpoints from \"./generatePhotoEndpoints\";\nimport generateVideoEndpoints from \"./generateVideoEndpoints\";\nimport * as typeCheckers from \"./typeCheckers\";\n\nexport default function createClient(apiKey: string) {\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new TypeError(\n      `An ApiKey must be provided when initiating the Pexel's client.`\n    );\n  }\n\n  return {\n    typeCheckers,\n    photos: generatePhotoEndpoints(apiKey),\n    videos: generateVideoEndpoints(apiKey),\n    collections: generateCollectionEndpoints(apiKey),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}